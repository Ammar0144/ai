
name: Deploy AI Service

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t ai-server .

      - name: Save Docker image to tar
        run: docker save ai-server -o ai-server.tar

      - name: Fix permissions for ai-server.tar
        run: chmod 644 ai-server.tar

      - name: List files and permissions
        run: ls -l

      - name: Copy Docker image to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "ai-server.tar"
          target: "~/"
          port: ${{ secrets.SERVER_PORT }}
          timeout: 10m
          command_timeout: 10m

      - name: Load and run Docker image on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          timeout: 10m
          command_timeout: 10m
          script: |
            # Load the new Docker image
            docker load -i ~/ai-server.tar
            
            # Create shared Docker network if it doesn't exist
            docker network create ai-llm-network 2>/dev/null || true
            
            # Stop and remove existing AI container
            docker stop ai-api 2>/dev/null || true
            docker rm ai-api 2>/dev/null || true
            
            # Run AI container on shared network with environment variables
            docker run -d \
              --name ai-api \
              --network ai-llm-network \
              --restart unless-stopped \
              -p 8081:8081 \
              -e AI_MOCK_MODE=false \
              -e LLM_SERVER_URL=http://llm-server:8082 \
              ai-server
            
            # Clean up unused images
            docker image prune -f
            
            echo "AI Service deployment completed successfully"
            echo "Swagger UI available at: http://your-server:8081/swagger/"
            echo "API Documentation: http://your-server:8081/docs"
            
            # Show container status
            docker ps --filter "name=ai-api"
